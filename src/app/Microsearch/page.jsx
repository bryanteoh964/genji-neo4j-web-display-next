// pages/index.js
'use client'
import { useState } from 'react';
import TextBlock from '../../components/TextBlock'

const data = {'kiritsubo': [0, 531, 4848, 6400], 'the': [1, 49, 55, 114, 122, 151, 153, 169, 185, 240, 245, 275, 301, 304, 307, 318, 348, 429, 436, 464, 530, 552, 571, 579, 582, 595, 648, 653, 671, 680, 691, 701, 704, 707, 711, 721, 738, 758, 835, 941, 962, 992, 1017, 1032, 1039, 1133, 1182, 1200, 1202, 1208, 1217, 1236, 1257, 1273, 1280, 1286, 1299, 1366, 1372, 1388, 1400, 1402, 1448, 1502, 1520, 1534, 1575, 1599, 1602, 1610, 1612, 1628, 1666, 1747, 1758, 1764, 1768, 1798, 1808, 1823, 1827, 1863, 1949, 2073, 2077, 2106, 2130, 2166, 2169, 2186, 2197, 2268, 2313, 2338, 2393, 2446, 2454, 2557, 2569, 2576, 2661, 2673, 2715, 2786, 2802, 2804, 2813, 2820, 2825, 2866, 2900, 2915, 2963, 2976, 2984, 3070, 3072, 3082, 3154, 3181, 3204, 3217, 3230, 3276, 3327, 3379, 3388, 3438, 3443, 3454, 3458, 3462, 3465, 3469, 3472, 3535, 3546, 3549, 3552, 3564, 3582, 3593, 3621, 3635, 3640, 3649, 3659, 3669, 3681, 3691, 3694, 3699, 3767, 3824, 3827, 3838, 3869, 3872, 3876, 3885, 3913, 3922, 3940, 3949, 3962, 3990, 3997, 4025, 4044, 4069, 4076, 4134, 4136, 4151, 4160, 4179, 4225, 4229, 4243, 4287, 4296, 4298, 4313, 4326, 4333, 4341, 4365, 4369, 4372, 4376, 4385, 4398, 4408, 4436, 4446, 4456, 4485, 4488, 4490, 4508, 4522, 4532, 4552, 4585, 4692, 4711, 4714, 4725, 4729, 4778, 4800, 4808, 4824, 4838, 4865, 4915, 5021, 5025, 5059, 5065, 5106, 5114, 5209, 5234, 5291, 5310, 5338, 5345, 5348, 5354, 5357, 5365, 5377, 5383, 5389, 5394, 5415, 5423, 5426, 5432, 5439, 5442, 5471, 5475, 5478, 5481, 5486, 5489, 5517, 5530, 5535, 5541, 5550, 5572, 5575, 5625, 5635, 5660, 5665, 5676, 5703, 5708, 5713, 5716, 5748, 5774, 5805, 5829, 5859, 5863, 5875, 5888, 5897, 5900, 5909, 5916, 5922, 5929, 5934, 5959, 5992, 6002, 6008, 6050, 6071, 6074, 6094, 6097, 6100, 6128, 6131, 6149, 6166, 6178, 6214, 6262, 6301, 6308, 6322, 6354, 6369, 6373, 6396, 6399, 6424, 6429, 6442, 6445, 6463, 6489, 6498], 'paulownia': [2], 'pavilion': [3], 'in': [4, 88, 142, 175, 260, 278, 330, 499, 521, 529, 610, 652, 679, 706, 757, 824, 890, 917, 970, 1152, 1159, 1195, 1214, 1282, 1285, 1438, 1457, 1564, 1746, 1756, 1951, 2151, 2702, 2714, 2738, 2808, 2893, 2931, 3076, 3138, 3142, 3171, 3203, 3256, 3464, 3480, 3520, 3643, 3761, 3778, 3793, 3864, 3868, 3874, 3884, 3933, 3946, 4073, 4203, 4235, 4253, 4322, 4518, 4528, 4591, 4677, 4745, 4994, 5045, 5058, 5219, 5323, 5364, 5404, 5463, 5540, 5566, 5633, 5918, 5976, 6200, 6321, 6341, 6418, 6495], 'a': [5, 45, 165, 197, 255, 269, 403, 565, 598, 611, 675, 688, 750, 794, 891, 957, 965, 1161, 1349, 1357, 1384, 1397, 1416, 1436, 1511, 1592, 1635, 1682, 1773, 1928, 1936, 2325, 2390, 2722, 2809, 2946, 3055, 3269, 3340, 3410, 3433, 3518, 3585, 3644, 3910, 3957, 4122, 4209, 4265, 4383, 4389, 4416, 4427, 4543, 4568, 4588, 4608, 4612, 4627, 4646, 4685, 4696, 4699, 4792, 4884, 4939, 4995, 5007, 5297, 5544, 5581, 5629, 5735, 5745, 5755, 5791, 5797, 5885, 5893, 6005, 6019, 6077, 6120, 6138, 6474], 'certain': [6, 3911], 'reign': [7, 4577], '(whose': [8], 'can': [9, 2854, 3445, 4110], 'it': [10, 193, 206, 471, 659, 1251, 1405, 1419, 1474, 1509, 1874, 2134, 2195, 2205, 2238, 2288, 2330, 2372, 2514, 2634, 2679, 2991, 3086, 3175, 3315, 3400, 3599, 3602, 3616, 3687, 3734, 3807, 4275, 4484, 4497, 4606, 4851, 5160, 5198, 5515, 5974], 'have': [11, 253, 668, 753, 1053, 1293, 1424, 1736, 1964, 2473, 2555, 2564, 2682, 2708, 2743, 2911, 3319, 3689, 3822, 3833, 4156, 4277, 4766, 5510, 5687, 6414], 'been)': [12], 'someone': [13, 1857, 2542, 6254], 'of': [14, 37, 75, 116, 155, 247, 303, 306, 390, 438, 581, 597, 690, 728, 760, 826, 881, 893, 903, 964, 1238, 1359, 1465, 1506, 1514, 1536, 1549, 1601, 1615, 1782, 1826, 1884, 1915, 2079, 2153, 2175, 2222, 2243, 2327, 2392, 2541, 2549, 2572, 2675, 2697, 2730, 2845, 2906, 2948, 2972, 2978, 2994, 3042, 3057, 3084, 3096, 3117, 3120, 3157, 3206, 3271, 3440, 3456, 3538, 3548, 3554, 3584, 3646, 3693, 3769, 3829, 3840, 3899, 3935, 4060, 4108, 4153, 4178, 4231, 4328, 4335, 4368, 4374, 4391, 4442, 4469, 4487, 4524, 4534, 4614, 4687, 4695, 4761, 4810, 4886, 4903, 4947, 5013, 5041, 5062, 5078, 5089, 5096, 5108, 5143, 5332, 5419, 5441, 5473, 5477, 5488, 5543, 5558, 5750, 5769, 5799, 5862, 5953, 5963, 6067, 6073, 6099, 6130, 6216, 6264, 6304, 6426, 6431, 6444], 'no': [15, 211, 546, 733, 777, 846, 949, 1189, 1670, 1751, 1913, 1965, 2689, 2856, 2920, 3250, 3266, 3476, 3775, 4010, 4119, 4176, 4768, 4963, 5048, 5056, 5094, 5205, 5684, 5741, 6224, 6232, 6274], 'very': [16, 1242, 1407, 1577, 2036, 2240, 2375, 2435, 2636, 2685, 2779, 3344, 4417, 4787, 5709, 5842, 6121, 6234, 6391, 6452], 'great': [17, 4803, 5008, 5849]}

const text = "This is an example text where the word 'example' and the word 'word' appear multiple times.";

export default function Home() {
  const [searchTerm, setSearchTerm] = useState('');

  return (
    <div>
      <input list="words" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} placeholder="Search..." />
      <datalist id="words">
        {Object.keys(data).map(word => (
          <option key={word} value={word} />
        ))}
      </datalist>

      <TextBlock text={text} searchTerm={searchTerm} data={data} />
    </div>
  );
}
