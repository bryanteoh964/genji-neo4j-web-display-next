.notificationContainer {
  position: relative;
  display: inline-block;
  z-index: 1001;
  margin-right: -10px;
  margin-left: 20px;
  margin-top: 20px;
}
  
.notificationButton {
  background: none;
  border: none;
  cursor: pointer;
  position: relative;
  padding: 8px;
  color: #ffffff;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.25s ease;
}

.notificationButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  transform: scale(1.05);
}

.badge {
  position: absolute;
  top: -2px;
  right: -2px;
  background-color: #e07a5f;
  color: white;
  font-size: 0.7rem;
  min-width: 18px;
  height: 18px;
  border-radius: 9px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  box-shadow: 0 2px 4px rgba(255, 77, 79, 0.2);
  transition: transform 0.2s ease;
}

.notificationButton:hover .badge {
  transform: scale(1.1);
}

.notificationDropdown {
  position: absolute;
  top: calc(100% + 8px);
  right: 0;
  width: 360px;
  max-height: 520px;
  background-color: rgba(80, 80, 80, 0.95);
  border-radius: 12px;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2), 0 3px 6px rgba(0, 0, 0, 0.15);
  z-index: 1001;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  border: 1px solid rgba(255, 255, 255, 0.1);
  animation: slideDown 0.3s ease;
  color: white;
}

.reviewInfoHeader {
  display: flex;
  align-items: center;
  gap: 8px;
}

.contentTypeLabel {
  font-size: 0.7rem;
  padding: 2px 6px;
  border-radius: 4px;
  background-color: rgba(255, 255, 255, 0.2);
  color: #ffffff;
  white-space: nowrap;
}

.contentTypeLabel.comment {
  background-color: rgba(129, 178, 154, 0.3);
  color: #ffffff;
}

.contentTypeLabel.reply {
  background-color: rgba(201, 120, 82, 0.3);
  color: #ffffff;
}

.contentTypeLabel.translation {
  background-color: rgba(203, 169, 93, 0.3);
  color: #ffffff;
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.errorNotification {
  background-color: rgba(255, 77, 79, 0.2);
  border: 1px solid rgba(255, 77, 79, 0.3);
  color: white;
  padding: 10px 14px;
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 0.85rem;
  margin: 10px;
  border-radius: 6px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.tabsContainer {
  display: flex;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  background-color: rgba(60, 60, 60, 0.5);
}

.tabButton {
  flex: 1;
  padding: 14px 12px;
  background: none;
  border: none;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  position: relative;
  color: rgba(255, 255, 255, 0.7);
  transition: all 0.2s ease;
}

.tabButton:hover {
  color: #ffffff;
  background-color: rgba(255, 255, 255, 0.05);
}

.activeTab {
  color: #ffffff;
  font-weight: 600;
  background-color: rgba(60, 60, 60, 0.7);
}

.activeTab::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 50%;
  height: 2px;
  background-color: #e07a5f;
  border-radius: 2px;
  transition: width 0.2s ease;
}

.activeTab:hover::after {
  width: 70%;
}

.tabBadge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: #e07a5f;
  color: white;
  font-size: 0.7rem;
  min-width: 16px;
  height: 16px;
  border-radius: 8px;
  padding: 0 5px;
  margin-left: 6px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

.notificationHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 14px 18px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  margin: 0;
  font-size: 1rem;
  font-weight: 600;
  color: #ffffff;
}

.notificationHeader h3 {
  color:white
}

.markAllRead {
  background: none;
  border: none;
  color: #81b29a;
  font-size: 0.75rem;
  cursor: pointer;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  transition: background-color 0.2s;
}

.markAllRead:hover {
  background-color: rgba(129, 178, 154, 0.2);
  text-decoration: underline;
}

.notificationList {
  overflow-y: auto;
  max-height: 420px;
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.3) rgba(80, 80, 80, 0.5);
}

.notificationList::-webkit-scrollbar {
  width: 6px;
}

.notificationList::-webkit-scrollbar-track {
  background: rgba(80, 80, 80, 0.5);
}

.notificationList::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: 6px;
}

.notificationItem {
  display: flex;
  align-items: center;
  padding: 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  position: relative;
  transition: background-color 0.2s ease;
}

.notificationItem:last-child {
  border-bottom: none;
}

.notificationItem:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

.notificationLink {
  display: flex;
  align-items: center;
  padding: 14px 18px;
  text-decoration: none;
  color: white;
  flex: 1;
  transition: background-color 0.2s ease;
}

.notificationLink:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

.notificationAvatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  overflow: hidden;
  margin-right: 14px;
  flex-shrink: 0;
  background-color: rgba(255, 255, 255, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.avatarImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.avatarFallback {
  color: white;
  font-weight: 600;
  font-size: 1rem;
}

.notificationContent {
  flex: 1;
  min-width: 0;
}

.notificationText {
  margin: 0 0 6px;
  font-size: 0.9rem;
  line-height: 1.5;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: white;
}

.notificationTime {
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.6);
  display: inline-block;
}

.dismissButton {
  background: none;
  border: none;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.5);
  font-size: 0.8rem;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  opacity: 0;
  transition: all 0.2s ease;
}

.notificationItem:hover .dismissButton {
  opacity: 1;
}

.dismissButton:hover {
  color: white;
  background-color: rgba(255, 255, 255, 0.1);
}

.reviewItem {
  padding: 18px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  transition: background-color 0.2s ease;
}

.reviewItem:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

.reviewItem:last-child {
  border-bottom: none;
}

.reviewItemHeader {
  display: flex;
  align-items: center;
  margin-bottom: 12px;
}

.reviewItemHeader h3 {
  color:white
}

.reviewInfo {
  flex: 1;
}

.reviewUsername {
  margin: 0 0 4px;
  font-weight: 500;
  font-size: 0.95rem;
  color: white;
}

.reviewContent {
  margin-left: 54px;
  margin-bottom: 14px;
}

.reviewContent p {
  margin: 0 0 10px;
  font-size: 0.9rem;
  line-height: 1.6;
  color: white;
  background-color: rgba(255, 255, 255, 0.1);
  padding: 10px 12px;
  border-radius: 8px;
  border-left: 3px solid #81b29a;
}

.locationInfo {
  display: flex;
  align-items: center;
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.6);
  margin-top: 8px;
}

.locationInfo svg {
  margin-right: 6px;
}

.locationLink {
  color: #81b29a;
  text-decoration: none;
  margin-left: 4px;
  transition: color 0.2s ease;
}

.locationLink:hover {
  text-decoration: underline;
  color: #a0c8b6; 
}

.reviewActions {
  display: flex;
  margin-left: 54px;
  gap: 10px;
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 6px;
  background-color: rgba(255, 255, 255, 0.1);
  border: none;
  border-radius: 6px;
  padding: 8px 14px;
  font-size: 0.85rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  color: white;
}

.actionButton:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.approveButton {
  background-color: rgba(129, 178, 154, 0.2);
  border: 1px solid rgba(129, 178, 154, 0.3);
}

.approveButton:hover {
  background-color: rgba(129, 178, 154, 0.3);
}

.hideButton {
  background-color: rgba(203, 169, 93, 0.2); 
  border: 1px solid rgba(203, 169, 93, 0.3);
}

.hideButton:hover {
  background-color: rgba(203, 169, 93, 0.3);
}

.deleteButton {
  background-color: rgba(201, 120, 82, 0.2); 
  border: 1px solid rgba(201, 120, 82, 0.3);
}

.deleteButton:hover {
  background-color: rgba(201, 120, 82, 0.3);
}

.disapproveButton {
  background-color: rgba(201, 120, 82, 0.2); 
  border: 1px solid rgba(201, 120, 82, 0.3);
  display: flex;
  align-items: center;
}

.disapproveButton svg:last-child {
  margin-left: 6px;
}

.disapproveButton:hover {
  background-color: rgba(201, 120, 82, 0.3);
}

.disapproveOptions {
  margin-top: 10px;
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.1);
  animation: fadeIn 0.25s ease;
}

.disapproveHeader {
  padding: 10px 14px;
  font-size: 0.85rem;
  color: rgba(255, 255, 255, 0.8);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  background-color: rgba(255, 255, 255, 0.05);
}

.disapproveActions {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  padding: 12px;
}

.cancelButton {
  background-color: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.cancelButton:hover {
  background-color: rgba(255, 255, 255, 0.15);
}

.loadingText, .emptyText {
  padding: 20px;
  color: rgba(255, 255, 255, 0.7);
  text-align: center;
  font-size: 0.9rem;
}

.headerActions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.refreshButton {
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.7);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem;
  border-radius: 50%;
  transition: all 0.2s ease;
}

.refreshButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
}

.refreshButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spinning {
  animation: spin 1s linear infinite;
}

